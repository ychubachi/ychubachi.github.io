<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Documentation on YC's Blog</title><link>http://www.example.com/docs/</link><description>Recent content in Documentation on YC's Blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 12 Aug 2018 12:30:00 +0600</lastBuildDate><atom:link href="http://www.example.com/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>KaTeX Support</title><link>http://www.example.com/docs/katex-support/</link><pubDate>Sun, 12 Aug 2018 12:30:00 +0600</pubDate><guid>http://www.example.com/docs/katex-support/</guid><description>KaTeX Syntax for Markdown In your Markdown content, use the katex shortcode for inserting KaTeX. Check documentation for Shortcode: katex.
Here&amp;rsquo;s an example Markdown content:
When {{&amp;lt; katex inline &amp;gt;}} a \ne 0 {{&amp;lt; /katex &amp;gt;}}, there are two solutions to {{&amp;lt; katex &amp;gt;}} ax^2 + bx + c = 0 {{&amp;lt; /katex &amp;gt;}} and they are: {{&amp;lt; katex &amp;gt;}} x = {-b \pm \sqrt{b^2-4ac} \over 2a} {{&amp;lt; /katex &amp;gt;}} Output:</description></item><item><title>Search: Fuse.js</title><link>http://www.example.com/docs/search-fuse-js/</link><pubDate>Fri, 06 Jul 2018 01:00:00 +0600</pubDate><guid>http://www.example.com/docs/search-fuse-js/</guid><description>Configure Fuse.js Search Client Select Fuse.js as the search client in your config.toml file:
[params.search] client = &amp;#34;fuse&amp;#34;</description></item><item><title>Search: Algolia</title><link>http://www.example.com/docs/search-algolia/</link><pubDate>Thu, 05 Jul 2018 23:30:00 +0600</pubDate><guid>http://www.example.com/docs/search-algolia/</guid><description>Configure Algolia Search Client Select Algolia as the search client in your config.toml file:
[params.search] client = &amp;#34;algolia&amp;#34; Also, add configuration options for Algolia:
[params.search.algolia] appId = &amp;#34;&amp;#34; indexName = &amp;#34;&amp;#34; searchApiKey = &amp;#34;&amp;#34; params.search.algolia [Map]: appId [String]: Algolia Application ID indexName [String]: Name for Algolia Indices
default: minimo_site searchApiKey [String]: Algolia Search-Only API Key You&amp;rsquo;ll find various information related to your Algolia account in the Algolia Dashboard.</description></item><item><title>Search: Lunr.js</title><link>http://www.example.com/docs/search-lunr-js/</link><pubDate>Thu, 05 Jul 2018 20:30:00 +0600</pubDate><guid>http://www.example.com/docs/search-lunr-js/</guid><description>Configure Lunr.js Search Client Select Lunr.js as the search client in your config.toml file:
[params.search] client = &amp;#34;lunr&amp;#34; Generate Search Index for Lunr.js Lunr.js will need a search index for searching across your site. So, you&amp;rsquo;ll need to generate that search index for Lunr.js before you deploy your site.
Minimo comes with a script for generating the search index for Lunr.js: /scripts/generate-search-index-lunr.js.
Install Dependencies Node.js must be installed on your system for using the generator script.</description></item><item><title>Search Support</title><link>http://www.example.com/docs/search-support/</link><pubDate>Thu, 05 Jul 2018 20:00:00 +0600</pubDate><guid>http://www.example.com/docs/search-support/</guid><description>Minimo supports the following clients for the search feature:
Algolia Fuse.js Lunr.js Follow the following steps for enabling search in your site.
Create Search Page First of all, you&amp;rsquo;ll need to create a search page.
Create a markdown file under /content/page/ directory with the filename search. If your site is multilingual, you can include language code in the filename. For example:
/content/page/search.md /content/page/search.en.md Add the following options in the frontmatter:</description></item><item><title>Comments Support</title><link>http://www.example.com/docs/comments-support/</link><pubDate>Thu, 29 Mar 2018 09:00:00 +0600</pubDate><guid>http://www.example.com/docs/comments-support/</guid><description>Minimo has support for comments baked into it.
Enable/Disable Comments Globally For enabling or disabling comments globally, check the following setting in your config.toml file:
[params.comments] enable = false params.comments [Map]: enable [Boolean]: Enable/Disable comments globally For Specific Posts The global .Site.Params.comments.enable setting can be overridden for specific posts in their content&amp;rsquo;s frontmatter with this option:
--- comments: true --- comments [Boolean]: Enable/Disable comments for specific posts Of course, you&amp;rsquo;ll also need to setup a comment system ( Disqus or Staticman ).</description></item><item><title>Emoji Support</title><link>http://www.example.com/docs/emoji-support/</link><pubDate>Tue, 27 Feb 2018 21:00:00 +0600</pubDate><guid>http://www.example.com/docs/emoji-support/</guid><description>First of all, if you really want emojis, set the enableEmoji setting to true in your config.toml file:
enableEmoji = true This will enable Hugo to find Emoji Shorthands in your content files and render them as Unicode Emoji Characters.
For example:
No, it&amp;rsquo;ll probably not be that colorful! Unless your device&amp;rsquo;s operating system natively supports colorful emojis, you will see a black &amp;amp; white one instead. üî•
‚úèÔ∏è For getting that colorful look, you will have to add this to your content&amp;rsquo;s frontmatter:</description></item><item><title>MathJax Support</title><link>http://www.example.com/docs/mathjax-support/</link><pubDate>Tue, 27 Feb 2018 18:00:00 +0600</pubDate><guid>http://www.example.com/docs/mathjax-support/</guid><description>For enabling MathJax, add this to your content&amp;rsquo;s frontmatter:
--- mathjax: true --- MathJax Syntax for Markdown In your Markdown content, use \\(&amp;hellip;\\) delimiters for in-line mathematics.
For mathematics blocks you can use either $$&amp;hellip;$$ or \\[&amp;hellip;\\] as delimiters.
Here&amp;rsquo;s an example Markdown content:
When \\( a \ne 0 \\), there are two solutions to $$ ax^2 + bx + c = 0 $$ and they are: \\[ x = {-b \pm \sqrt{b^2-4ac} \over 2a} \\] Output:</description></item><item><title>Sidebar</title><link>http://www.example.com/docs/sidebar/</link><pubDate>Wed, 07 Feb 2018 19:15:00 +0600</pubDate><guid>http://www.example.com/docs/sidebar/</guid><description>Enabling Sidebar For enabling Sidebar, use the following configuration options in your config.toml file:
[params.sidebar] enable = true params.sidebar [Map]: enable [Boolean]: Switch for enabling sidebar Adding Widgets to Sidebar For adding Widgets to the Sidebar, check the Widgets documentation.</description></item><item><title>Widgets</title><link>http://www.example.com/docs/widgets/</link><pubDate>Wed, 07 Feb 2018 18:30:00 +0600</pubDate><guid>http://www.example.com/docs/widgets/</guid><description>Minimo supports Widgets that you can place on specific Widget Areas.
Available Widgets Minimo has the following built-in Widgets:
Name Slug About | about Breadcrumbs | breadcrumbs Recent Posts | recent_posts Search | search Sidebar Menu | sidebar_menu Social Menu | social_menu Taxonomy Cloud | taxonomy_cloud Widget Configuration Options Here are the configuration options available for the Widgets:
Widget: About about [Map]: title [String]: Title</description></item><item><title>Shortcodes</title><link>http://www.example.com/docs/shortcodes/</link><pubDate>Thu, 05 Oct 2017 20:00:00 +0600</pubDate><guid>http://www.example.com/docs/shortcodes/</guid><description>Minimo comes with several shortcodes built-in.
Shortcode: center Center align you content.
center: Parameters Markdown content between opening and closing tags. center: Usage Example {{&amp;lt; center &amp;gt;}} _Center Aligned Text_ {{&amp;lt; /center &amp;gt;}} Output:
Center Aligned Text Shortcode: convo Renders conversation blocks.
convo: Parameters sep [String] (optional): seperator between person and text (default: &amp;ldquo;:&amp;quot;) convo: Inner Syntax person :: text You can remove the person part, if you want.</description></item><item><title>Cover Image</title><link>http://www.example.com/docs/cover-image/</link><pubDate>Sat, 30 Sep 2017 14:00:00 +0600</pubDate><guid>http://www.example.com/docs/cover-image/</guid><description>You can add cover image to your contents with the cover paramameter in the content&amp;rsquo;s front-matter.
You can directly provide the image url:
--- cover: /images/eden-farm-children-s-village.jpg --- cover [String]: path/url of the cover image Or you can provide additional information:
--- cover: image: /images/eden-farm-children-s-village.jpg alternate: Picture of a yellow wall with a blue window in the upper-left corner caption: Eden Farm Children&amp;#39;s Village by Gareth Harper on Unsplash style: full --- cover [Map]: image [String]: path/url of the cover image alternate [String]: alternate text for the image caption [String]: caption for the cover image style [String]: full / wide / normal</description></item><item><title>Translation Support</title><link>http://www.example.com/docs/translation/</link><pubDate>Wed, 27 Sep 2017 14:00:00 +0600</pubDate><guid>http://www.example.com/docs/translation/</guid><description>You can translate Minimo in your own language!
For example, if you want to translate Minimo in Spanish, you will have to add this to your site&amp;rsquo;s config file:
[languages.es] lang = &amp;#34;es&amp;#34; languageName = &amp;#34;Spanish&amp;#34; weight = 1 Then create a folder named /i18n/ in your site&amp;rsquo;s root. And create a file /i18n/es.toml with the translated strings.
For reference template you can see the en.toml file.
If you want your translation file to be included in Minimo repository, feel free to create a pull request.</description></item><item><title>Syntax Highlighting</title><link>http://www.example.com/docs/syntax-highlighting/</link><pubDate>Wed, 27 Sep 2017 12:00:00 +0600</pubDate><guid>http://www.example.com/docs/syntax-highlighting/</guid><description>Hugo uses Chroma as it&amp;rsquo;s built-in syntax-highlighter.
For detailed information about Syntax Highlighting in Hugo, check the Hugo&amp;rsquo;s Syntax Highlighting Documentation.</description></item><item><title>Menus Setup Guide</title><link>http://www.example.com/docs/menus/</link><pubDate>Wed, 27 Sep 2017 10:00:00 +0600</pubDate><guid>http://www.example.com/docs/menus/</guid><description>Minimo has three menus.
Main Menu Sidebar Menu Social Menu Main Menu name: main
Main menu is located at the top of the site.
Check Hugo&amp;rsquo;s Menus Documentation for information about managing this menu.
You can hide the Main Menu using the following option in your config.toml file:
[params.settings] hideMainMenu = true Sidebar Menu name: sidebar
Social Menu is available as Widget: sidebar_menu. Add it to the sidebar Widget Area to use it.</description></item><item><title>Opengraph Support</title><link>http://www.example.com/docs/opengraph/</link><pubDate>Tue, 26 Sep 2017 08:00:00 +0600</pubDate><guid>http://www.example.com/docs/opengraph/</guid><description>Minimo has built-in support for Opengraph tags. It will pick up most of the things from your contents' front-matters &amp;amp; Hugo configuration.
You can use these options in you content&amp;rsquo;s front-matter:
--- audios: [] # for og:audio tags images: [] # for og:image tags videos: [] # for og:video tags --- audios [Array of Strings]: path/url of audio files images [Array of Strings]: path/url of image files videos [Array of Strings]: path/url of video files N.</description></item><item><title>Authors Setup Guide</title><link>http://www.example.com/docs/authors/</link><pubDate>Tue, 26 Sep 2017 06:00:00 +0600</pubDate><guid>http://www.example.com/docs/authors/</guid><description>Minimo supports multiple authors for your site. Just make sure you have the following configuration in your site&amp;rsquo;s config.toml:
[taxonomies] author = &amp;#34;authors&amp;#34; Minimo treats Authors as a Hugo Taxonomy.
Author&amp;rsquo;s Profile For adding an author to your site:
Create data/authors folder in your site&amp;rsquo;s root directory Create a file with the filename format: &amp;lt;username&amp;gt;.toml Now, add information about the author using the structure below:
/data/authors/muniftanjim.toml
id = &amp;#34;muniftanjim&amp;#34; [email] username = &amp;#34;muniftanjim&amp;#34; host = &amp;#34;gmail.</description></item><item><title>Configuration File: config.toml</title><link>http://www.example.com/docs/config-file/</link><pubDate>Mon, 25 Sep 2017 08:00:00 +0600</pubDate><guid>http://www.example.com/docs/config-file/</guid><description>This is the Minimo&amp;rsquo;s configuration file ( config.toml ) file of this site:
baseURL = &amp;#34;http://www.example.com&amp;#34; title = &amp;#34;YC&amp;#39;s Blog&amp;#34; # for smart copyright line, leave this blank and check [params.copyright] # copyright = &amp;#34;&amp;#34; theme = &amp;#34;minimo&amp;#34; disqusShortname = &amp;#34;&amp;#34; googleAnalytics = &amp;#34;&amp;#34; Paginate = 5 preserveTaxonomyNames = true enableRobotsTXT = true # generate robots.txt # Syntax Highlighting ( https://gohugo.io/content-management/syntax-highlighting/ ) pygmentsCodefences = true enableEmoji = true # Missing translations will default to this content language defaultContentLanguage = &amp;#34;en&amp;#34; [params.</description></item><item><title>Updating Guide</title><link>http://www.example.com/docs/updating/</link><pubDate>Mon, 25 Sep 2017 06:00:00 +0600</pubDate><guid>http://www.example.com/docs/updating/</guid><description>Updating Minimo Update Minimo clone Just replace the themes/minimo folder with the latest version of Minimo clone, i.e. delete the old folder and clone again:
rm -rf themes/minimo git clone --depth 1 https://github.com/MunifTanjim/minimo themes/minimo Then, commit the changes:
git add themes/minimo git commit -m &amp;#34;update [theme]: minimo&amp;#34; Update Minimo submodule cd themes/minimo git checkout master git fetch &amp;amp;&amp;amp; git pull cd ../.. git add themes/minimo git commit -m &amp;#34;update [theme]: minimo&amp;#34; To Do After Updating Minimo After updating Minimo, always check that your site&amp;rsquo;s config.</description></item><item><title>Installation Guide</title><link>http://www.example.com/docs/installation/</link><pubDate>Mon, 25 Sep 2017 02:00:00 +0600</pubDate><guid>http://www.example.com/docs/installation/</guid><description>First of all you will need to setup a Hugo site. You can follow the Hugo&amp;rsquo;s Quick Start Guide for that.
After you&amp;rsquo;re done with that, it&amp;rsquo;s time for installing Minimo!
Installing Minimo There are two different ways you can install Minimo:
As clone As submodule The second method is recommended.
Install Minimo as clone With this method, you will simply clone it. And a copy of Minimo&amp;rsquo;s repository will be stored with the rest of you site.</description></item></channel></rss>